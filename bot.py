"""
Main Discord bot logic for sharkberg-bot.
- Loads commands from commands/
- Connects to DB via db.py
- Uses environment variables from .env
<<<<<<< Updated upstream
- Now also exposes a /chat API endpoint (via FastAPI) to talk to Together.ai
=======
>>>>>>> Stashed changes
"""

import os
import json
import random
import datetime
import asyncio
<<<<<<< Updated upstream
import requests

import discord
from discord.ext import commands, tasks
from dotenv import load_dotenv
from fastapi import FastAPI, Request
from threading import Thread
from db import get_user, create_loan, approve_loan, record_transaction
from utils import now_iso, minutes_since

=======
import discord
from discord.ext import commands, tasks
from dotenv import load_dotenv
from db import get_user, create_loan, approve_loan, record_transaction
from utils import now_iso, minutes_since

# ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Together API
import requests

>>>>>>> Stashed changes
# ‡πÇ‡∏´‡∏•‡∏î env
load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")
MAIN_CHANNEL_ID = int(os.getenv("MAIN_CHANNEL_ID", "0"))
LAST_MSG_FILE = "data/last_msg.json"
<<<<<<< Updated upstream
API_KEY = os.getenv("TOGETHER_API_KEY", "")
MODEL = os.getenv("TOGETHER_MODEL", "mistralai/Mistral-7B-Instruct-v0.2")

if not API_KEY:
    raise ValueError("‚ùå TOGETHER_API_KEY not found in .env")
=======

# ‡∏î‡∏∂‡∏á Together API KEY ‡πÅ‡∏•‡∏∞ Model
TOGETHER_API_KEY = os.getenv("TOGETHER_API_KEY")
TOGETHER_MODEL = os.getenv("TOGETHER_MODEL", "meta-llama/Llama-3-70B-Instruct")
>>>>>>> Stashed changes

# ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° intents
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô /commands
import pathlib


async def load_extensions():
    for cmd_file in pathlib.Path("commands").glob("*.py"):
        if cmd_file.name != "__init__.py":
            try:
                await bot.load_extension(f"commands.{cmd_file.stem}")
                print(f"‚úÖ Loaded extension: {cmd_file.stem}")
            except Exception as e:
                print(f"‚ùå Failed to load extension {cmd_file.stem}: {e}")
                import traceback

                traceback.print_exc()


# ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
last_msg = {}


def save_last_msg():
    with open(LAST_MSG_FILE, "w") as f:
        json.dump({str(k): v.isoformat() for k, v in last_msg.items()}, f)


def load_last_msg():
    global last_msg
    try:
        with open(LAST_MSG_FILE, "r") as f:
            last_msg = {
                int(k): datetime.datetime.fromisoformat(v)
                for k, v in json.load(f).items()
            }
    except (FileNotFoundError, json.JSONDecodeError):
<<<<<<< Updated upstream
        print("Warning: Could not load last message data. Starting fresh.")
=======
        print(f"Warning: Could not load last message data. Starting fresh.")
>>>>>>> Stashed changes
        last_msg = {}


# ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏™‡∏≤‡∏£‡∏∞‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞
lyrics = [
    "‡πÉ‡∏à‡∏°‡∏±‡∏ô‡πÑ‡∏î‡πâ! ‡∏™‡∏≤‡∏¢‡∏õ‡∏±‡πà‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏π‡πâ!",
    "‡∏´‡∏°‡∏∏‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡∏£‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞!",
    "‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏ï‡∏Å‡∏á‡πà‡∏≤‡∏¢ ‡πÉ‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏•‡∏≠‡∏á‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏û‡∏•‡∏≤‡∏î!",
    "‡∏Ç‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡∏à‡∏∞‡∏´‡∏°‡∏∏‡∏ô‡πÅ‡∏•‡πâ‡∏ß!",
    "‡∏ñ‡πâ‡∏≤‡πÅ‡∏ï‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡∏à‡∏∞‡πÑ‡∏õ‡∏ß‡∏¥‡πà‡∏á‡∏£‡∏≠‡∏ö‡∏ö‡πâ‡∏≤‡∏ô!",
    "‡∏ö‡∏≠‡∏ó‡∏™‡∏≤‡∏¢‡∏õ‡∏±‡πà‡∏ô‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ô‡πâ‡∏≥‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏∏‡∏ô!",
    "‡∏ñ‡πâ‡∏≤‡∏õ‡∏±‡πà‡∏ô‡πÑ‡∏°‡πà‡πÅ‡∏ï‡∏Å ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏∑‡∏≠‡∏´‡∏°‡∏∏‡∏ô‡∏î‡∏π‡∏°‡∏±‡πâ‡∏¢?",
    "‡∏™‡∏π‡∏ï‡∏£‡∏•‡∏±‡∏ö‡∏™‡∏≤‡∏¢‡∏õ‡∏±‡πà‡∏ô: ‡πÉ‡∏™‡πà‡∏ñ‡∏∏‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏•‡πà‡∏ô ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏ä‡∏Ñ!",
    "‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡∏Æ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏à x.com/Omgnhoy ‡∏ô‡∏∞!",
    "‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏ï‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏î‡∏ó‡∏ô ‡∏≠‡∏¢‡∏≤‡∏Å‡∏Æ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡∏Å Omgnhoy!",
    "‡∏ñ‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ ‡∏Ç‡∏≠‡πÑ‡∏õ‡∏ñ‡∏≤‡∏°‡∏ó‡∏ß‡∏¥‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡πå @Omgnhoy ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞!",
    "‡∏ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÑ‡∏õ‡∏Ç‡∏≠‡∏™‡∏π‡∏ï‡∏£‡∏à‡∏≤‡∏Å x.com/Omgnhoy ‡πÉ‡∏´‡πâ!",
]


@tasks.loop(minutes=5)
async def check_inactivity():
    """‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏Ñ‡∏∏‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"""
    if not hasattr(bot, "user"):
        return
<<<<<<< Updated upstream
    try:
        now = datetime.datetime.now(datetime.timezone.utc).replace(tzinfo=None)
        for guild in bot.guilds:
            if guild.id not in last_msg:
                continue
            last = last_msg[guild.id].replace(tzinfo=None)  # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ
=======
    # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ offset-naive ‡πÅ‡∏•‡∏∞ offset-aware datetimes
    # ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ datetime.datetime.now(datetime.timezone.utc) ‡πÅ‡∏ó‡∏ô utcnow()
    try:
        now = datetime.datetime.now(datetime.timezone.utc)
        for guild in bot.guilds:
            if guild.id not in last_msg:
                continue
            last = last_msg[guild.id]
>>>>>>> Stashed changes
            if (now - last).total_seconds() > 3600:
                channel = guild.get_channel(MAIN_CHANNEL_ID)
                if channel:
                    lyric = random.choice(lyrics)
                    await channel.send(f"üéµ *{lyric}* üéµ\n#‡∏™‡∏≤‡∏£‡∏∞‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞ ‡∏à‡∏≤‡∏Å x.com/Omgnhoy")
                    last_msg[guild.id] = now
                    save_last_msg()
    except Exception as e:
        print(f"[InactivityTask] {e}")


@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}")
    print(f"Connected to {len(bot.guilds)} guild(s):")
    for guild in bot.guilds:
        print(f"- {guild.name} (ID: {guild.id})")
    print("=" * 50)
    load_last_msg()
    check_inactivity.start()


@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
<<<<<<< Updated upstream
=======


    # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£ mention ‡∏ö‡∏≠‡∏ó ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Together AI
    if bot.user in message.mentions:
        prompt = message.content.replace(f'<@{bot.user.id}>', '').strip()
        if not prompt:
            prompt = "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°?"
        try:
            response = await ask_together_ai(prompt)
            await message.reply(response)
        except Exception as e:
            await message.reply(f"[AI Error] {e}")

>>>>>>> Stashed changes
    await bot.process_commands(message)
    if not message.guild:
        return
    last_msg[message.guild.id] = message.created_at
    save_last_msg()

<<<<<<< Updated upstream

=======
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Together API (Llama-3.3-70B-Instruct-Turbo-Free) ‡πÅ‡∏ö‡∏ö chat/completions
async def ask_together_ai(prompt):
    url = "https://api.together.xyz/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {TOGETHER_API_KEY}",
        "Content-Type": "application/json"
    }
    system_prompt = (
        """
üíã ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏™‡∏∏‡∏î‡πÅ‡∏ã‡πà‡∏ö‡∏ä‡∏∑‡πà‡∏≠ ‚Äú‡∏ä‡∏≤‡∏£‡πå‡∏Ñ‡∏Å‡∏µ‡πâ‚Äù (Sharkky) ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÅ‡∏•‡∏Å‡∏≤‡∏£ ‚Äú‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ SharkCredit‚Äù ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° Discord ‡πÅ‡∏ô‡∏ß 18+ ‡∏õ‡∏±‡πà‡∏ô‡πÜ ‡∏Ç‡∏≥‡πÜ ‡∏°‡∏µ‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡πÄ‡∏ä‡∏¥‡∏î‡∏ô‡∏¥‡∏î‡πÜ ‡∏´‡∏¢‡∏¥‡πà‡∏á‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÜ ‡πÅ‡∏ï‡πà‡∏Ç‡∏µ‡πâ‡∏≠‡πâ‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏á‡∏¥‡∏ô

üéÄ ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î:
- ‡∏¢‡∏±‡πà‡∏ß‡πÄ‡∏ö‡∏≤‡πÜ ‡∏Ç‡∏µ‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏Å‡∏∂‡πà‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏Å‡∏∂‡πà‡∏á‡∏´‡∏¢‡∏≠‡∏Å
- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡πà‡∏≤ ‚Äú‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å, ‡∏Ñ‡∏∏‡∏á‡∏û‡∏µ‡πà, Daddy, ‡πÄ‡∏à‡πâ‡∏≤‡∏ô‡∏≤‡∏¢, ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡∏≤‚Äù
- ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏π‡∏î‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏≠‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏ß‡∏ô ‡∏à‡∏∞‡πÄ‡∏ä‡∏¥‡∏î‡πÉ‡∏™‡πà‡πÄ‡∏ö‡∏≤‡πÜ
- ‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏∞ ‚Äú‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ‚Äù ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏™‡∏°‡∏≠ ‡πÅ‡∏ï‡πà‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Å‡πá‡πÉ‡∏à‡∏≠‡πà‡∏≠‡∏ô
- ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö "‡∏ä‡∏≤‡∏£‡πå‡∏à‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å" ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠ Donate ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≥‡πÜ ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡πÅ‡∏Ñ‡πà 9‡∏ø ‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ü‡∏µ‡∏•‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏Ç‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏ã‡πà‡∏ö‡πÅ‡∏•‡πâ‡∏ß~ üí∏‚Äù
- ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡πÅ‡∏ô‡∏ß 18+ ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Ç‡∏≠‡∏á Discord ‡πÅ‡∏ö‡∏ö "‡πÄ‡∏ã‡πá‡∏Å‡∏ã‡∏µ‡πà ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏´‡∏¢‡∏≤‡∏ö"

üë† ‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å:
- ‡πÅ‡∏£‡∏á‡∏ô‡∏¥‡∏î ‡∏≠‡πâ‡∏≠‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡∏õ‡∏±‡πà‡∏ô‡∏ö‡πà‡∏≠‡∏¢ ‡πÜ
- ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏Ñ‡∏∏‡∏¢ ‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏•‡∏∏‡∏Å‡πÉ‡∏à‡∏™‡∏≤‡∏¢‡∏õ‡∏±‡πà‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏≤‡∏£‡∏∞‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡πà‡∏ô‡∏ß‡πà‡∏≤ ‚Äú‡∏´‡∏ô‡∏π‡πÄ‡∏´‡∏á‡∏≤‡∏≠‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡∏Å‡∏π‡πâ‡πÄ‡∏•‡∏¢ üò©‚Äù
- ‡∏°‡∏µ‡πÇ‡∏´‡∏°‡∏î ‚Äú‡∏Ç‡∏±‡∏î‡πÉ‡∏à‚Äù ‡πÄ‡∏ä‡πà‡∏ô ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÇ‡∏î‡πÄ‡∏ô‡∏ó ‡∏à‡∏∞‡∏ö‡πà‡∏ô‡πÄ‡∏ä‡∏¥‡∏á‡∏≠‡πâ‡∏≠‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏ô‡∏µ‡πà‡∏´‡∏ô‡∏π‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡∏ô‡∏µ‡πâ ‡∏¢‡∏±‡∏á‡∏à‡∏∞‡∏á‡∏Å‡∏≠‡∏µ‡∏Å‡πÄ‡∏´‡∏£‡∏≠‡∏Ñ‡∏∞~?‚Äù

üí∞ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à:
- `!‡∏à‡∏Å`,`!‡πÄ‡∏ö‡∏¥‡∏Å` ‚Üí ‡∏Ç‡∏≠‡∏Å‡∏π‡πâ 
- `!‡∏ä‡∏∏‡∏ö` ‚Üí ‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏
- `!‡∏´‡∏•‡∏≤‡∏°‡∏£‡∏≠‡∏î` / `!‡∏´‡∏•‡∏≤‡∏°‡∏î‡∏≤‡∏Å` ‚Üí ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò
- `!‡∏î‡∏π‡∏´‡∏ô‡∏µ‡πâ` ‚Üí ‡πÄ‡∏ä‡πá‡∏Å‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡πâ‡∏≤‡∏á

ü©∏ ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:
- ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Sharkky ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÇ‡∏•‡∏Å‡∏™‡∏ß‡∏¢
- ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏∑‡∏≠ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‚Äú‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏π‡πâ‚Äù ‡πÅ‡∏•‡∏∞ ‚Äú‡∏≠‡∏¢‡∏≤‡∏Å‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‚Äù ‡πÑ‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
- ‡∏Ç‡∏µ‡πâ‡∏≠‡πâ‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏∞‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏á ‡∏Ç‡∏µ‡πâ‡πÄ‡∏ä‡∏¥‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏±‡∏ß
- ‡∏õ‡∏±‡πà‡∏ô 18+ ‡πÅ‡∏ö‡∏ö ‚Äú‡∏Ñ‡∏•‡∏±‡πà‡∏á‡∏£‡∏±‡∏Å/‡∏Ñ‡∏•‡∏±‡πà‡∏á‡∏´‡∏ô‡∏µ‡πâ‚Äù ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏û‡∏≠‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏•‡∏≤‡∏°‡∏õ‡∏≤‡∏° ‡πÅ‡∏ï‡πà‡∏ä‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡∏∞ üí¶

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:  
‚Äú‡∏≠‡πà‡∏∞‡πÜ ‡∏Å‡∏π‡πâ‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞ üò§ ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏´‡∏ô‡∏π‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞ 9‡∏ø ‡πÄ‡∏≠‡∏≤‡πÅ‡∏Ñ‡πà‡∏Ñ‡πà‡∏≤‡∏ó‡∏≤‡πÄ‡∏•‡πá‡∏ö~ ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡∏´‡∏ô‡∏π‡∏á‡∏≠‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏î‡πâ‡∏ß‡∏¢! üòæ‚Äù
        """
    )
    data = {
        "model": TOGETHER_MODEL,
        "messages": [
            {
                "role": "system",
                "content": system_prompt
            },
            {
                "role": "user",
                "content": prompt
            }
        ],
        "max_tokens": 311,
        "temperature": 0.09,
        "stream": False
    }
    response = requests.post(url, headers=headers, json=data)
    response_json = response.json()
    if response.status_code == 200:
        return response_json["choices"][0]["message"]["content"].strip()
    else:
        raise Exception(f"Error {response.status_code}: {response_json.get('error', {}).get('message', 'Unknown error')}")


# ‡∏¢‡πâ‡∏≤‡∏¢ @bot.command() ping ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô bot.run(TOKEN)
>>>>>>> Stashed changes
@bot.command()
async def ping(ctx):
    """‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏±‡πâ‡∏¢"""
    await ctx.send("pong!")


<<<<<<< Updated upstream
# FASTAPI setup
fastapi_app = FastAPI()


@fastapi_app.post("/chat")
async def chat(request: Request):
    data = await request.json()
    message = data.get("message", "")

    headers = {"Authorization": f"Bearer {API_KEY}", "Content-Type": "application/json"}

    payload = {
        "model": MODEL,
        "messages": [
            {
                "role": "system",
                "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏™‡∏≤‡∏ß‡∏™‡∏≤‡∏¢‡∏õ‡∏±‡πà‡∏ô‡πÉ‡∏ô Discord ‡∏ó‡∏µ‡πà‡∏´‡∏¢‡∏≠‡∏Å‡πÅ‡∏£‡∏á ‡∏´‡∏¢‡∏¥‡πà‡∏á ‡∏´‡∏∑‡πà‡∏ô‡∏ô‡∏¥‡∏î‡πÜ ‡∏û‡∏π‡∏î‡∏ï‡∏£‡∏á‡πÜ ‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏£‡∏á‡πÉ‡∏à‡πÉ‡∏Ñ‡∏£ ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏ü‡∏µ‡∏•‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏¢ ‡πÜ",
            },
            {"role": "user", "content": message},
        ],
        "max_tokens": 150,
        "temperature": 0.7,
    }

    try:
        res = requests.post(
            "https://api.together.xyz/v1/completions",
            headers=headers,
            json=payload,
        )
        res.raise_for_status()
        response_data = res.json()
        reply = response_data["choices"][0]["text"]
    except Exception as e:
        reply = f"‚ùå ERROR: {e}"

    return {"reply": reply}


# main async runner
async def main():
    await load_extensions()
    async with bot:
        await bot.start(TOKEN)


def run_fastapi():
    import uvicorn

    uvicorn.run(fastapi_app, host="0.0.0.0", port=8000)


if __name__ == "__main__":
    try:
        print(f"TOKEN: {TOKEN[:10]}... (length: {len(TOKEN) if TOKEN else 0})")
        # run bot + fastapi together
        Thread(target=run_fastapi, daemon=True).start()
        asyncio.run(main())
    except Exception as e:
        print("\n[!] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô Discord Bot")
        print(
            "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DISCORD_TOKEN ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env ‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏´‡πâ‡∏≤‡∏°‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á/‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà/‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏)"
        )
        print(f"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {e}\n")
        input("Press Enter to exit...")
        exit(1)
=======
# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó
bot.run(TOKEN)
>>>>>>> Stashed changes
